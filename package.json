{
  "name": "drone-ci",
  "displayName": "Drone CI",
  "description": "Manage your Drone CI servers easily",
  "version": "2.0.1",
  "publisher": "maximtrp",
  "author": {
    "name": "Maksim Terpilovskii",
    "url": "https://github.com/maximtrp"
  },
  "homepage": "https://github.com/maximtrp/droneci-vscode-extension",
  "repository": {
    "type": "git",
    "url": "https://github.com/maximtrp/droneci-vscode-extension"
  },
  "icon": "resources/icon.png",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "browser": "./out/webExtension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "drone-ci",
          "title": "Drone CI",
          "icon": "resources/drone.svg"
        }
      ]
    },
    "configuration": [
      {
        "title": "Drone CI",
        "properties": {
          "drone-ci.filterRepos.byActivity": {
            "type": "string",
            "default": "All",
            "description": "Defines which repositories to show in repositories view by activity status.",
            "enum": [
              "Active",
              "Inactive",
              "All"
            ],
            "enumDescriptions": [
              "Show only active repositories",
              "Show only inactive repositories",
              "Show all repositories"
            ]
          },
          "drone-ci.filterRepos.byVisibility": {
            "type": "string",
            "default": "All",
            "markdownDescription": "Defines which repositories to show in repositories view by visibility status. \n* **Private** repositories are only accessible to people you explicitly share access with.\n* **Public** repositories are accessible to everyone on the internet.\n* **Internal** repositories are only accessible to authenticated users.",
            "enum": [
              "Public",
              "Private",
              "Internal",
              "All"
            ],
            "enumDescriptions": [
              "Show only public repositories",
              "Show only private repositories",
              "Show only internal repositories",
              "Show all repositories"
            ]
          },
          "drone-ci.sortRepos.order": {
            "type": "string",
            "default": "DESC",
            "description": "Defines sorting order for repositories.",
            "enum": [
              "DESC",
              "ASC"
            ],
            "enumDescriptions": [
              "Descending",
              "Ascending"
            ]
          },
          "drone-ci.sortRepos.by": {
            "type": "string",
            "default": "Name",
            "description": "Defines the field to sort repositories by.",
            "enum": [
              "Name",
              "Activity",
              "Visibility",
              "Creation Date",
              "Last Update"
            ],
            "enumDescriptions": [
              "Sort repositories by their name",
              "Sort repositories by their activity state",
              "Sort repositories by their visibility",
              "Sort repositories by their creation date",
              "Sort repositories by their last update"
            ]
          }
        }
      }
    ],
    "views": {
      "drone-ci": [
        {
          "id": "drone-ci-servers",
          "name": "Servers"
        },
        {
          "id": "drone-ci-repos",
          "name": "Repositories"
        },
        {
          "id": "drone-ci-builds",
          "name": "Builds"
        },
        {
          "id": "drone-ci-cron",
          "name": "Cron jobs",
          "visibility": "collapsed"
        },
        {
          "id": "drone-ci-secrets",
          "name": "Secrets",
          "visibility": "collapsed"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "drone-ci-servers",
        "contents": "Please add a Drone CI server to use this extension.\n[Add a Server](command:drone-ci.addServer)\nYour data will be kept by VSCode Secret Storage and will not be sent anywhere or synced."
      }
    ],
    "commands": [
      {
        "command": "drone-ci.addServer",
        "title": "Add a Server",
        "icon": "$(add)",
        "category": "Drone CI"
      },
      {
        "command": "drone-ci.editServer",
        "title": "Edit",
        "icon": "$(edit)"
      },
      {
        "command": "drone-ci.deleteServer",
        "title": "Delete",
        "icon": "$(trash)"
      },
      {
        "command": "drone-ci.gotoServer",
        "title": "Go to Server",
        "icon": "$(link-external)"
      },
      {
        "command": "drone-ci.refreshRepos",
        "title": "Refresh Repositories",
        "icon": "$(refresh)",
        "enablement": "hasServerSelected"
      },
      {
        "command": "drone-ci.gotoBuildPage",
        "title": "Go to Build Page",
        "icon": "$(link-external)"
      },
      {
        "command": "drone-ci.gotoBuildComparePage",
        "title": "Go to Git Compare Page",
        "icon": "$(git-compare)"
      },
      {
        "command": "drone-ci.gotoGitRepoPage",
        "title": "Go to Repo Page in Git",
        "icon": "$(git-branch)"
      },
      {
        "command": "drone-ci.gotoRepoPage",
        "title": "Go to Repo Page in Drone",
        "icon": "$(link-external)"
      },
      {
        "command": "drone-ci.disableRepo",
        "title": "Disable",
        "icon": "$(close)"
      },
      {
        "command": "drone-ci.enableRepo",
        "title": "Enable",
        "icon": "$(check)"
      },
      {
        "command": "drone-ci.repairRepo",
        "title": "Repair",
        "icon": "$(wrench)"
      },
      {
        "command": "drone-ci.updateRepo",
        "title": "Update",
        "icon": "$(edit)"
      },
      {
        "command": "drone-ci.gotoRepoBranchesPage",
        "title": "Go to Branches Page",
        "icon": "$(link-external)"
      },
      {
        "command": "drone-ci.gotoRepoDeploymentsPage",
        "title": "Go to Deployments Page",
        "icon": "$(link-external)"
      },
      {
        "command": "drone-ci.gotoRepoSettingsPage",
        "title": "Go to Settings Page",
        "icon": "$(link-external)"
      },
      {
        "command": "drone-ci.refreshBuilds",
        "title": "Refresh Builds",
        "icon": "$(refresh)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.loadMoreBuilds",
        "title": "Load More Builds",
        "icon": "$(refresh)"
      },
      {
        "command": "drone-ci.triggerBuild",
        "title": "Add a Build",
        "icon": "$(add)",
        "enablement": "hasBuilds"
      },
      {
        "command": "drone-ci.viewBuildStepLog",
        "title": "Build Step Log",
        "icon": "$(open-preview)"
      },
      {
        "command": "drone-ci.viewBuildInfo",
        "title": "Build Info",
        "icon": "$(open-preview)"
      },
      {
        "command": "drone-ci.approveBuildStage",
        "title": "Approve",
        "icon": "$(check)"
      },
      {
        "command": "drone-ci.declineBuildStage",
        "title": "Decline",
        "icon": "$(close)"
      },
      {
        "command": "drone-ci.promoteBuild",
        "title": "Promote",
        "icon": "$(rocket)"
      },
      {
        "command": "drone-ci.cancelBuild",
        "title": "Cancel",
        "icon": "$(close)"
      },
      {
        "command": "drone-ci.restartBuild",
        "title": "Restart",
        "icon": "$(debug-restart)"
      },
      {
        "command": "drone-ci.triggerCron",
        "title": "Trigger Cron Job",
        "icon": "$(run)"
      },
      {
        "command": "drone-ci.refreshCrons",
        "title": "Refresh Cron Jobs",
        "icon": "$(refresh)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.gotoCronPage",
        "title": "Go to Cron Jobs Page",
        "icon": "$(link-external)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.refreshSecrets",
        "title": "Refresh Secrets",
        "icon": "$(refresh)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.addSecret",
        "title": "Add a Secret",
        "icon": "$(add)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.gotoSecretsPage",
        "title": "Go to Secrets Page",
        "icon": "$(link-external)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.deleteSecret",
        "title": "Delete a Secret",
        "icon": "$(trash)"
      },
      {
        "command": "drone-ci.editSecret",
        "title": "Edit a Secret",
        "icon": "$(edit)"
      },
      {
        "command": "drone-ci.deleteCron",
        "title": "Delete a Cron Job",
        "icon": "$(trash)"
      },
      {
        "command": "drone-ci.editCron",
        "title": "Edit a Cron Job",
        "icon": "$(edit)"
      },
      {
        "command": "drone-ci.addCron",
        "title": "Add a Cron Job",
        "icon": "$(add)",
        "enablement": "hasRepoSelected"
      },
      {
        "command": "drone-ci.showActiveRepos",
        "title": "Active Repositories",
        "enablement": "config.drone-ci.filterRepos.byActivity != Active"
      },
      {
        "command": "drone-ci.showInactiveRepos",
        "title": "Inactive Repositories",
        "enablement": "config.drone-ci.filterRepos.byActivity != Inactive"
      },
      {
        "command": "drone-ci.showActiveAndInactiveRepos",
        "title": "All Repositories",
        "enablement": "config.drone-ci.filterRepos.byActivity != All"
      },
      {
        "command": "drone-ci.showPublicRepos",
        "title": "Public Repositories",
        "enablement": "config.drone-ci.filterRepos.byVisibility != Public"
      },
      {
        "command": "drone-ci.showPrivateRepos",
        "title": "Private Repositories",
        "enablement": "config.drone-ci.filterRepos.byVisibility != Private"
      },
      {
        "command": "drone-ci.showInternalRepos",
        "title": "Internal Repositories",
        "enablement": "config.drone-ci.filterRepos.byVisibility != Internal"
      },
      {
        "command": "drone-ci.showReposWithAnyVisibility",
        "title": "All Repositories",
        "enablement": "config.drone-ci.filterRepos.byVisibility != All"
      },
      {
        "command": "drone-ci.sortReposByName",
        "title": "Name",
        "enablement": "config.drone-ci.sortRepos.by != Name"
      },
      {
        "command": "drone-ci.sortReposByActivity",
        "title": "Activity",
        "enablement": "config.drone-ci.sortRepos.by != Activity"
      },
      {
        "command": "drone-ci.sortReposByCreationDate",
        "title": "Creation Date",
        "enablement": "config.drone-ci.sortRepos.by != 'Creation Date'"
      },
      {
        "command": "drone-ci.sortReposByLastUpdate",
        "title": "Last Update",
        "enablement": "config.drone-ci.sortRepos.by != 'Last Update'"
      },
      {
        "command": "drone-ci.sortReposByVisibility",
        "title": "Visibility",
        "enablement": "config.drone-ci.sortRepos.by != Visibility"
      }
    ],
    "submenus": [
      {
        "id": "drone-ci.build",
        "label": "More",
        "icon": "$(more)"
      },
      {
        "id": "drone-ci.server",
        "label": "More",
        "icon": "$(more)"
      },
      {
        "id": "drone-ci.repo",
        "label": "More",
        "icon": "$(more)"
      },
      {
        "id": "drone-ci.filterRepos",
        "label": "Filter",
        "icon": "$(filter)"
      },
      {
        "id": "drone-ci.filterRepos.filterBy",
        "label": "Filter by",
        "icon": "$(filter)"
      },
      {
        "id": "drone-ci.filterRepos.byActivity",
        "label": "Activity"
      },
      {
        "id": "drone-ci.filterRepos.byVisibility",
        "label": "Visibility"
      },
      {
        "id": "drone-ci.filterRepos.sortBy",
        "label": "Sort by"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "drone-ci.addServer",
          "when": "view == drone-ci-servers",
          "group": "navigation"
        },
        {
          "command": "drone-ci.refreshRepos",
          "when": "view == drone-ci-repos",
          "group": "navigation"
        },
        {
          "command": "drone-ci.refreshBuilds",
          "when": "view == drone-ci-builds",
          "group": "navigation"
        },
        {
          "command": "drone-ci.triggerBuild",
          "when": "view == drone-ci-builds",
          "group": "navigation"
        },
        {
          "command": "drone-ci.refreshSecrets",
          "when": "view == drone-ci-secrets",
          "group": "navigation"
        },
        {
          "command": "drone-ci.addSecret",
          "when": "view == drone-ci-secrets",
          "group": "navigation"
        },
        {
          "command": "drone-ci.gotoSecretsPage",
          "when": "view == drone-ci-secrets",
          "group": "navigation"
        },
        {
          "command": "drone-ci.refreshCrons",
          "when": "view == drone-ci-cron",
          "group": "navigation"
        },
        {
          "command": "drone-ci.addCron",
          "when": "view == drone-ci-cron",
          "group": "navigation"
        },
        {
          "command": "drone-ci.gotoCronPage",
          "when": "view == drone-ci-cron",
          "group": "navigation"
        },
        {
          "submenu": "drone-ci.filterRepos",
          "when": "view == drone-ci-repos",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "drone-ci.gotoServer",
          "when": "view == drone-ci-servers",
          "group": "creative"
        },
        {
          "command": "drone-ci.editServer",
          "when": "view == drone-ci-servers",
          "group": "creative"
        },
        {
          "command": "drone-ci.deleteServer",
          "when": "view == drone-ci-servers",
          "group": "descructive"
        },
        {
          "command": "drone-ci.enableRepo",
          "when": "view == drone-ci-repos && viewItem == repo_inactive",
          "group": "actions"
        },
        {
          "command": "drone-ci.disableRepo",
          "when": "view == drone-ci-repos && viewItem == repo_active",
          "group": "actions"
        },
        {
          "command": "drone-ci.repairRepo",
          "when": "view == drone-ci-repos && viewItem == repo_active",
          "group": "actions"
        },
        {
          "command": "drone-ci.updateRepo",
          "when": "false",
          "group": "actions"
        },
        {
          "command": "drone-ci.gotoRepoPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoGitRepoPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoRepoBranchesPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoRepoDeploymentsPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoRepoSettingsPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.approveBuildStage",
          "when": "view == drone-ci-builds && viewItem == stage_blocked",
          "group": "inline"
        },
        {
          "command": "drone-ci.declineBuildStage",
          "when": "view == drone-ci-builds && viewItem == stage_blocked",
          "group": "inline"
        },
        {
          "command": "drone-ci.cancelBuild",
          "when": "view == drone-ci-builds && viewItem == build_running",
          "group": "inline"
        },
        {
          "command": "drone-ci.cancelBuild",
          "when": "view == drone-ci-builds && viewItem == build_running",
          "group": "actions"
        },
        {
          "command": "drone-ci.restartBuild",
          "when": "view == drone-ci-builds && viewItem =~ /^build/",
          "group": "actions"
        },
        {
          "command": "drone-ci.promoteBuild",
          "when": "view == drone-ci-builds && viewItem == build_success",
          "group": "actions"
        },
        {
          "command": "drone-ci.viewBuildInfo",
          "when": "view == drone-ci-builds && viewItem =~ /^build/",
          "group": "inline"
        },
        {
          "command": "drone-ci.gotoBuildPage",
          "when": "view == drone-ci-builds && viewItem =~ /^build/"
        },
        {
          "command": "drone-ci.viewBuildInfo",
          "when": "view == drone-ci-builds && viewItem =~ /^build/"
        },
        {
          "command": "drone-ci.gotoBuildComparePage",
          "when": "view == drone-ci-builds && viewItem =~ /^build/"
        },
        {
          "command": "drone-ci.viewBuildStepLog",
          "when": "view == drone-ci-builds && viewItem == step",
          "group": "inline"
        },
        {
          "command": "drone-ci.editSecret",
          "when": "view == drone-ci-secrets && viewItem != none",
          "group": "inline"
        },
        {
          "command": "drone-ci.deleteSecret",
          "when": "view == drone-ci-secrets && viewItem != none",
          "group": "inline"
        },
        {
          "command": "drone-ci.editCron",
          "when": "view == drone-ci-cron && viewItem == cron",
          "group": "inline"
        },
        {
          "command": "drone-ci.triggerCron",
          "when": "view == drone-ci-cron && viewItem == cron",
          "group": "inline"
        },
        {
          "command": "drone-ci.deleteCron",
          "when": "view == drone-ci-cron && viewItem == cron",
          "group": "inline"
        },
        {
          "submenu": "drone-ci.repo",
          "group": "inline"
        },
        {
          "submenu": "drone-ci.build",
          "group": "inline"
        },
        {
          "submenu": "drone-ci.server",
          "group": "inline"
        }
      ],
      "drone-ci.repo": [
        {
          "command": "drone-ci.enableRepo",
          "when": "view == drone-ci-repos && viewItem == repo_inactive",
          "group": "actions"
        },
        {
          "command": "drone-ci.disableRepo",
          "when": "view == drone-ci-repos && viewItem == repo_active",
          "group": "actions"
        },
        {
          "command": "drone-ci.repairRepo",
          "when": "view == drone-ci-repos && viewItem == repo_active",
          "group": "actions"
        },
        {
          "command": "drone-ci.updateRepo",
          "when": "false",
          "group": "actions"
        },
        {
          "command": "drone-ci.gotoRepoPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoGitRepoPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoRepoBranchesPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoRepoDeploymentsPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        },
        {
          "command": "drone-ci.gotoRepoSettingsPage",
          "when": "view == drone-ci-repos && viewItem =~ /^repo/"
        }
      ],
      "drone-ci.build": [
        {
          "command": "drone-ci.restartBuild",
          "when": "view == drone-ci-builds && viewItem =~ /^build/",
          "group": "actions"
        },
        {
          "command": "drone-ci.cancelBuild",
          "when": "view == drone-ci-builds && viewItem == build_running",
          "group": "actions"
        },
        {
          "command": "drone-ci.promoteBuild",
          "when": "view == drone-ci-builds && viewItem == build_success",
          "group": "actions"
        },
        {
          "command": "drone-ci.gotoBuildPage",
          "when": "view == drone-ci-builds && viewItem =~ /^build/"
        },
        {
          "command": "drone-ci.viewBuildInfo",
          "when": "view == drone-ci-builds && viewItem =~ /^build/"
        },
        {
          "command": "drone-ci.gotoBuildComparePage",
          "when": "view == drone-ci-builds && viewItem =~ /^build/"
        }
      ],
      "drone-ci.server": [
        {
          "command": "drone-ci.gotoServer",
          "when": "view == drone-ci-servers",
          "group": "creative"
        },
        {
          "command": "drone-ci.editServer",
          "when": "view == drone-ci-servers",
          "group": "creative"
        },
        {
          "command": "drone-ci.deleteServer",
          "when": "view == drone-ci-servers",
          "group": "destructive"
        }
      ],
      "drone-ci.filterRepos.byActivity": [
        {
          "command": "drone-ci.showActiveRepos",
          "group": "activity@1"
        },
        {
          "command": "drone-ci.showInactiveRepos",
          "group": "activity@2"
        },
        {
          "command": "drone-ci.showActiveAndInactiveRepos",
          "group": "activity@3"
        }
      ],
      "drone-ci.filterRepos.byVisibility": [
        {
          "command": "drone-ci.showPublicRepos",
          "group": "activity@1"
        },
        {
          "command": "drone-ci.showPrivateRepos",
          "group": "activity@2"
        },
        {
          "command": "drone-ci.showInternalRepos",
          "group": "activity@3"
        },
        {
          "command": "drone-ci.showReposWithAnyVisibility",
          "group": "activity@4"
        }
      ],
      "drone-ci.filterRepos.sortBy": [
        {
          "command": "drone-ci.sortReposByName"
        },
        {
          "command": "drone-ci.sortReposByActivity"
        },
        {
          "command": "drone-ci.sortReposByCreationDate"
        },
        {
          "command": "drone-ci.sortReposByLastUpdate"
        },
        {
          "command": "drone-ci.sortReposByVisibility"
        }
      ],
      "drone-ci.filterRepos": [
        {
          "submenu": "drone-ci.filterRepos.filterBy",
          "when": "view == drone-ci-repos"
        },
        {
          "submenu": "drone-ci.filterRepos.sortBy",
          "when": "view == drone-ci-repos"
        }
      ],
      "drone-ci.filterRepos.filterBy": [
        {
          "submenu": "drone-ci.filterRepos.byActivity",
          "when": "view == drone-ci-repos"
        },
        {
          "submenu": "drone-ci.filterRepos.byVisibility",
          "when": "view == drone-ci-repos"
        }
      ],
      "commandPalette": [
        {
          "command": "drone-ci.editServer",
          "when": "false"
        },
        {
          "command": "drone-ci.deleteServer",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoServer",
          "when": "false"
        },
        {
          "command": "drone-ci.refreshRepos",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoBuildPage",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoBuildComparePage",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoGitRepoPage",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoRepoPage",
          "when": "false"
        },
        {
          "command": "drone-ci.disableRepo",
          "when": "false"
        },
        {
          "command": "drone-ci.enableRepo",
          "when": "false"
        },
        {
          "command": "drone-ci.repairRepo",
          "when": "false"
        },
        {
          "command": "drone-ci.updateRepo",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoRepoBranchesPage",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoRepoDeploymentsPage",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoRepoSettingsPage",
          "when": "false"
        },
        {
          "command": "drone-ci.refreshBuilds",
          "when": "false"
        },
        {
          "command": "drone-ci.loadMoreBuilds",
          "when": "false"
        },
        {
          "command": "drone-ci.triggerBuild",
          "when": "false"
        },
        {
          "command": "drone-ci.declineBuildStage",
          "when": "false"
        },
        {
          "command": "drone-ci.approveBuildStage",
          "when": "false"
        },
        {
          "command": "drone-ci.viewBuildStepLog",
          "when": "false"
        },
        {
          "command": "drone-ci.viewBuildInfo",
          "when": "false"
        },
        {
          "command": "drone-ci.promoteBuild",
          "when": "false"
        },
        {
          "command": "drone-ci.cancelBuild",
          "when": "false"
        },
        {
          "command": "drone-ci.restartBuild",
          "when": "false"
        },
        {
          "command": "drone-ci.triggerCron",
          "when": "false"
        },
        {
          "command": "drone-ci.refreshCrons",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoCronPage",
          "when": "false"
        },
        {
          "command": "drone-ci.refreshSecrets",
          "when": "false"
        },
        {
          "command": "drone-ci.addSecret",
          "when": "false"
        },
        {
          "command": "drone-ci.gotoSecretsPage",
          "when": "false"
        },
        {
          "command": "drone-ci.deleteSecret",
          "when": "false"
        },
        {
          "command": "drone-ci.editSecret",
          "when": "false"
        },
        {
          "command": "drone-ci.deleteCron",
          "when": "false"
        },
        {
          "command": "drone-ci.editCron",
          "when": "false"
        },
        {
          "command": "drone-ci.addCron",
          "when": "false"
        }
      ]
    }
  },
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test-compile": "tsc -p ./",
    "vscode:prepublish": "npm run package",
    "webpack": "webpack --mode development",
    "webpack-watch": "webpack --mode development --watch",
    "open-in-browser": "vscode-test-web --verbose --extensionDevelopmentPath=. .",
    "package": "webpack --mode production --devtool hidden-source-map",
    "deploy": "vsce publish && ovsx publish"
  },
  "devDependencies": {
    "@vscode/test-web": "^0.0.51",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.3",
    "@types/node": "16.x",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "ts-loader": "^9.5.0",
    "eslint": "^8.52.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "typescript": "^5.2.2",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "assert": "^2.1.0",
    "stream-http": "^3.2.0",
    "stream-browserify": "^3.0.0",
    "https-browserify": "^1.0.0",
    "browserify-zlib": "^0.2.0",
    "url": "^0.11.3",
    "process": "^0.11.10",
    "buffer": "^6.0.3"
  },
  "dependencies": {
    "drone-node": "^2.2.0"
  }
}
